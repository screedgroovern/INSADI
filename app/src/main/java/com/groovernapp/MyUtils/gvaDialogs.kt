package com.groovernapp.MyUtilsimport android.content.Contextimport android.os.Handlerimport android.os.Looperimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.view.View.GONEimport android.view.View.VISIBLEimport android.view.ViewGroupimport android.widget.Buttonimport android.widget.ImageViewimport android.widget.TextViewimport com.groovernapp.insadi.Rimport com.google.android.material.bottomsheet.BottomSheetDialogimport com.groovernapp.data.RESTClientimport com.groovernapp.insadi.databinding.DlgInsertIpBindingimport com.pixplicity.easyprefs.library.Prefsobject gvaDialogs {    //    ================== ALERT DIALOG ==================    sealed class Either<out A, out B> {        class L<A>(val left: A) : Either<A, Nothing>()        class R<B>(val right: B) : Either<Nothing, B>()    }    class alertDialog(val con: Context, val parent: ViewGroup? = null) {        private val dlg = BottomSheetDialog(con, R.style.transparentsheetdialog)        private var Sttl: String? = null; private var Salert: String? = null        private var Ittlsize: Int? = null; private var Ialertsize: Int? = null        private var OCLyes: View.OnClickListener? = null; private var  OCLno: View.OnClickListener? = null        private var Bbtyesshow: Boolean = true; private var Bbtnoshow: Boolean = true        private var Sbtyes: String = "Ya"; private var Sbtno: String = "Tidak"        private var Ibtyessize: Int = 16; private var Ibtnosize: Int = 16        private var Bbtyesallcaps: Boolean = true; private var Bbtnoallcaps: Boolean = true        private var activeIpEditor = false        private var countShowIp = 0        fun tittleText(ttl: String, ttlsize: Int = 17) = apply { Sttl = ttl; Ittlsize = ttlsize }        fun alertText(alert: String, alertsize: Int = 17) = apply { Salert = alert; Ialertsize = alertsize }        fun setBTyesListener(ocl: View.OnClickListener) = apply { OCLyes = ocl }        fun setBTyesListener(myclick: onClickButton) = apply{ OCLyes = View.OnClickListener { myclick.clickButton(dlg) }}        fun setBTnoListener(ocl: View.OnClickListener) = apply { OCLno = ocl }        fun setBTnoListener(myclick: onClickButton) = apply{ OCLno = View.OnClickListener { myclick.clickButton(dlg) }}        fun setBTyesText(str: String = Sbtyes, yessize: Int = Ibtyessize, allcaps: Boolean = Bbtyesallcaps) =            apply { Sbtyes = str; Ibtyessize = yessize; Bbtyesallcaps = allcaps }        fun setBTnoText(str: String = Sbtno, nosize: Int = Ibtnosize, allcaps: Boolean = Bbtnoallcaps) =            apply { Sbtno = str; Ibtnosize = nosize; Bbtnoallcaps = allcaps }        fun showBTyes(show: Boolean = Bbtyesshow) = apply { Bbtyesshow = show }        fun showBTno(show: Boolean = Bbtnoshow) = apply { Bbtnoshow = show }        fun activeIpEditorAccess(active: Boolean) = apply { activeIpEditor = active }        fun build(): BottomSheetDialog{            val v = LayoutInflater.from(con).inflate(R.layout.dlg_alerttext, parent, false)            dlg.setContentView(v)            val ivLogo: ImageView = v.findViewById(R.id.Dlgalert_IMG)            val tvttl: TextView = v.findViewById(R.id.Dlgalert_TValertttl)            val tvalert: TextView = v.findViewById(R.id.Dlgalert_TValert)            val btno: Button = v.findViewById(R.id.Dlgalert_BTno)            val btyes: Button = v.findViewById(R.id.Dlgalert_BTyes)            tvttl.text = Sttl            tvalert.text = Salert            btyes.apply {                visibility = if(Bbtyesshow) VISIBLE else GONE                text = Sbtyes                isAllCaps = Bbtyesallcaps            }            btno.apply {                visibility = if(Bbtnoshow) VISIBLE else GONE                text = Sbtno                isAllCaps = Bbtnoallcaps            }            if (OCLno == null){                btno.setOnClickListener { dlg.dismiss() }            }else btno.setOnClickListener(OCLno)            if (OCLyes == null){                btyes.setOnClickListener { dlg.dismiss() }            }else btyes.setOnClickListener(OCLyes)            if (activeIpEditor){                ivLogo.setOnClickListener {                    countShowIp++                    if (countShowIp == 5){                        countShowIp = 0                        showIpEditorDialog()                    }else Handler(Looper.getMainLooper()).postDelayed({                        countShowIp = 0                    }, 5000)                }            }            return dlg        }        private fun showIpEditorDialog() = BottomSheetDialog(con).apply{            DlgInsertIpBinding.inflate(LayoutInflater.from(con), parent, false).run {                setContentView(root)                btSet.setOnClickListener {                    val ip = tilIp.editText?.text.toString()                    RESTClient.url = "http://$ip/insadi/"                    Prefs.putString("IP", ip)                    Log.d("showIpEditorDialog","Set IP to -> ${RESTClient.url}")                    this@apply.dismiss()                }            }        }.show()        fun interface onClickButton {            fun clickButton(dlg: BottomSheetDialog)        }    }}